# i3blocks configuration file
#
# The i3blocks man page describes the usage of the binary,
# and its website describes the configuration:
#
#     https://vivien.github.io/i3blocks


# Global properties
separator=true
separator_block_width=15
# Print click data
#[clickme]
#align=center
#full_text=Click me!
#min_width=Button=yes
#command=echo hello
#command=/bin/i3email | xargs |  awk '{print "[" $1 "] New Mail"}'
#instance=config2
#interval=1800
#min_width=messages: 10
#color=#fb4520
#color=#ffffff
#[FEED]
#command=rsstail -1 -u https://synthtopia.com/feed | grep Elektron
#interval=once

#full_text=<span foreground="green" size="x-large">-</span> <i><span color="#EE37B8">-</span></i>
#markup=pango
#[reddit]
#command=rsstail -1 -u https://hnrss.org/frontpage | cut -c 8- | tr '\n' '/' | skroll -l -n 80 -r -d 1
#color=#A4C2F4
#interval=persist

#[rrr]
#command=rsstail -1 -u https://synthtopia.com/feed | cut -c 8- | tr '\n' '/' | skroll -l -n 80 -r -d 1
#interval=persist

#[reddit]
#command=rsstail -1 -u https://reddit.com/r/commandline.rss | cut -c 8- | tr '\n' '/' | skroll -l -n 80 -r -d 1
#color=#A4C2F4
#interval=persist

#[reddit]
#command=rsstail -1 -u https://reddit.com/r/commandline.rss | cut -c 8- | tr '\n' '/' | scroller -l 50
#color=#A4C2F4
#interval=persist

#[aur]
#command=~/.dot/blocklets/aur-update/aur-update
#instance=config
#markup=pango
#interval=once
#[docker]
#command=$SCRIPT_DIR/docker
#color=#0db7ed
#interval=10
#LABEL=üê≥

#[systemctl]
#command=if [[ -n $(systemctl status | grep State | head -n1 | grep running) ]];then echo "<span color='#A3BE8C'>SYSTEMD</span>"; else echo "<span color='#ea6962'>SYSTEMD</span>"; fi
##command=echo "<>"
#interval=once
#signal=10
#markup=pango
##label=SYSTEMD

#[wifi]
#command=if [[ $(nmcli radio wifi) == "enabled" ]] ; then echo "<span color='#A3BE8C'>WIFI</span>" ; else echo "<span color='#ea6962'>WIFI</span>"; fi
#interval=once
#markup=pango
#signal=10


#[ufw]
#command=if [[ $(systemctl status ufw) ]];then echo "<span color='#A3BE8C'>UFW</span>"; else echo "<span color='#ea6962'>UFW</span>"; fi
##command=echo "<>"
#interval=once
#signal=10
#markup=pango
##label=SYSTEMD



#[tlp]
#command=if [[ $(systemctl status tlp | grep "Active: active") ]];then echo "<span color='#A3BE8C'>TLP</span>"; else echo "<span color='#444444'>TLP</span>"; fi
##command=echo "<>"
#interval=once
#signal=10
#markup=pango
##label=SYSTEMD

#[pwoertop]
#command=if [[ $(systemctl status powertop) ]];then echo "<span color='#A3BE8C'>POWERTOP</span>"; else echo "<span color='#444444'>POWERTOP</span>"; fi
##command=echo "<>"
#interval=once
#signal=10
#markup=pango
##label=SYSTEMD

##
##
##
#[SLOCK]
#command=if [[ $(systemctl status slock@wsz) ]];then echo "<span color='#A3BE8C'>SLOCK</span>"; else echo "<span color='#444444'>SLOCK</span>"; fi
##command=echo "<>"
#interval=once
#signal=10
#markup=pango
##label=SYSTEMD



#[nix]
#command=if [[ $(systemctl status nix-daemon) ]];then echo "<span color='#A3BE8C'>NIX</span>"; else echo "<span color='#444444'>NIX</span>"; fi
##command=echo "<>"
#interval=once
#signal=10
#markup=pango
##label=SYSTEMD

#[dockerd]
#command=if [[ $(pgrep docker) ]];then echo "<span color='#A3BE8C'>DOCKER</span>"; else echo "<span color='#444444'>DOCKER</span>"; fi
##command=echo "<>"
#interval=once
#signal=10
#markup=pango
##label=SYSTEMD

#[tidal]
#command=tmux has-session -t tidal; if [ $? -eq 0 ];then echo "<span color='#A3BE8C'>TIDAL</span>"; else echo "<span color='#444444'>TIDAL</span>"; fi
##command=echo "<>"
#interval=once
#signal=10
#markup=pango
##label=SYSTEMD

#[boxes]
#command=if [[ $(pgrep gnome-boxes) ]];then echo "<span color='#A3BE8C'>BOXES</span>"; else echo "<span color='#444444'>BOXES</span>"; fi
##command=echo "<>"
#interval=once
#signal=10
#markup=pango
##label=SYSTEMD



#[gov]
#command=if [ $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor) == "performance" ];then echo "<span color='#e78a4e'>PERF</span>"; else echo "<span color='#7C9C90'>POWER</span>"; fi
##command=echo "<>"
#interval=once
#signal=10
#markup=pango
##label=SYSTEMD



##[mediaplayer]
##command=~/.dot/blocklets/mediaplayer/mediaplayer
##interval=5
##signal=10

##[todo2]
##command=cat ~/.dot/todo | xargs
##color=#EBCB8B
##interval=once

##[time]
##command=date '+%d.%m' | awk '{print "Ôóµ "$1""}'
##interval=36000
##signal=10
###color=#fabd2f
###background="#fabd2f"
##background=#D08770
##color="#191d20"

##[sch]
##interval=once
##command=echo " `~/.dot/bin/scripts/sch -n` "
##signal=10
##markup=pango

#[musac]
#interval=once
#signal=10
#markup=pango
#command=echo "<span bgcolor='lightgray'  font_weight='normal' color='#191d20'> `playerctl metadata title` </span>"
##command=playerctl metadata title
##align=left

##[cryptolll]
##label=ÔÖö
#markup=pango
#interval=once
#instance=bitcoin
#command=~/.crypto
#
#[spark btc]
#interval=once
#markup=pango
##signal=10
#command=echo "<span font_desc='Fixedsys 8'>`cat ~/.dot/crypt/btc.value | tail -n 30 | spark`</span>"
#[spark eth]
#interval=once
#markup=pango
##signal=10
#command=echo "<span font_desc='Fixedsys 8'>`cat ~/.dot/crypt/eth.value | tail -n 30 | spark`</span>"


# CRYPT ##################################
[BTC]
#label=ÔÖö
markup=pango
interval=2700
instance=bitcoin
align=left
command=~/.cryptoc

[ETH]
markup=pango
interval=2700
instance=ethereum
command=~/.cryptoc

[DOT]
markup=pango
interval=2700
instance=polkadot
command=~/.cryptoc

[RENDER]
markup=pango
interval=2700
instance=render-token
command=~/.cryptoc

[BTCASH]
markup=pango
interval=2700
instance=bitcoin-cash
command=~/.cryptoc

#[CRO]
#markup=pango
#interval=2700
#instance=crypto-com-coin
#command=~/.cryptoc

[Polygon]
markup=pango
interval=2700
instance=polygon
command=~/.cryptoc

[ALGO]
markup=pango
interval=2700
instance=algorand
command=~/.cryptoc
###################################################


[arch]
#command=~/.config/i3/blocklets/arch-update/arch-update
command=echo "PKGS $(checkupdates | wc -l) |$(~/.config/i3/blocklets/aur-update/aur-update | tr -d 'ÔåÉ')"
interval=once
signal=10
markup=pango
color=#fabd2f

#[aur]
#command=~/.config/i3/blocklets/aur-update/aur-update
#interval=once
#signal=10
#markup=pango
##label=ÔåÉ
#color=#A4C2F4

#
#[time]
#command=date '+%H:%M:%S' | awk '{print $1 ""}'
#interval=5
#color=#fabd2f


#[task1]
#command=task | sed -n '4p' | cut -c22- | awk '{print $1}'
##command=task | sed -n '4p' | awk '{print "> " $3}'
#color=#ea6962
#interval=once
#
##GREEN
##color=#A3BE8C
##Yellow
##color=#EBCB8B
##ORANGE
##color=#D08770
#
#[task1def]
#command=task list +TODAY rc.dateformat=[H:N]  | sed -n '4p' | rev | cut -d ' ' -f2- | rev | awk '{$1=$1;print}' | cut -d' ' -f3-
#color=#ea6962
#interval=once
#
#[task2def]
#command=task list +TODAY rc.dateformat=[H:N]  | sed -n '5p' | rev | cut -d ' ' -f2- | rev | awk '{$1=$1;print}' | cut -d' ' -f3-
#color=#ea6962
#interval=once
#
#[task2def]
#command=task list +TODAY rc.dateformat=[H:N]  | sed -n '6p' | rev | cut -d ' ' -f2- | rev | awk '{$1=$1;print}' | cut -d' ' -f3-
#color=#ea6962
#interval=once

#[task tomorrow 1]
#command=task list +TOMORROW rc.dateformat=[H:N]  | sed -n '4p' | rev | cut -d ' ' -f2- | rev | awk '{$1=$1;print}' | cut -d' ' -f3-
#color=#EBCB8B
#interval=once

#[task tomorrow 2]
#command=task list +TOMORROW rc.dateformat=[H:N]  | sed -n '5p' | rev | cut -d ' ' -f2- | rev | awk '{$1=$1;print}' | cut -d' ' -f3-
#color=#EBCB8B
#interval=once

#[task tomorrow 3]
#command=task list +TOMORROW rc.dateformat=[H:N]  | sed -n '6p' | rev | cut -d ' ' -f2- | rev | awk '{$1=$1;print}' | cut -d' ' -f3-
#color=#EBCB8B
#interval=once

#[task week 1]
#command=task +4WEEK -DUETODAY -TOMORROW list rc.dateformat=a\ [D/M]\ [H:N]   | sed -n '4p' | rev | cut -d ' ' -f2- | rev | awk '{$1=$1;print}' | cut -d' ' -f3-
#color=#A3BE8C
#interval=once

#[task week 2]
#command=task +4WEEK -DUETODAY -TOMORROW list rc.dateformat=a\ [D/M]\ [H:N]   | sed -n '5p' | rev | cut -d ' ' -f2- | rev | awk '{$1=$1;print}' | cut -d' ' -f3-
#color=#A3BE8C
#interval=once

#[task week 3]
#command=task +4WEEK -DUETODAY -TOMORROW list rc.dateformat=a\ [D/M]\ [H:N]   | sed -n '6p' | rev | cut -d ' ' -f2- | rev | awk '{$1=$1;print}' | cut -d' ' -f3-
#color=#A3BE8C
#interval=once

#[task2]
#command=task | sed -n '5p' | tr '\n' ' ' |  rev | cut -d ' ' -f3-7 | rev
#interval=once

#[todo2]
#command=less ~/.pod/todo2.md | xargs
#color=#EBCB8B
#interval=once

#[urgent]
#command=less ~/.pod/urgent.md | xargs
#color=#ea6962
#interval=once

#[todo]
#command=less ~/42/notes.md | xargs
#color=#999999
#interval=once


#[BACKLIGHT]
#command=xbacklight -get |awk '{print "‚òÄ " $1}'
#color=fabd2f
#interval=once
#signal=10

#[uptime]
#command=uptime --pretty | awk '{print "Óçì "$2":"$4}'
#command=uptime --pretty | sed 's/up//g' | sed 's/ days, /D /g' | sed 's/ hours/H /g' | sed 's/ minutes/M /g' | sed 's/ day, /D /g' | sed 's/hour/H /g' | sed 's/ , / /g'
#signal=10
#color="#BBBBBB"
#interval=once


#[CPU]
#command=lscpu | grep 'CPU MHz' | awk '{print "ﬂí " $3}'
#interval=once
#color=#d3869b

#[monitors]
#command=less ~/.dot/var/monitors
#interval=once
#signal=10
#color=#a9b665

#[RPM]
#command=sensors | awk '/^fan1:/{print $2 $3}'
#label=Ôúè_
#interval=10
#signal=10

#[fan]
#command=FAN=$(sensors | awk '/^fan1:/{print $2}') ; if [ "2900" -lt $FAN ];then echo "<span color='#ea6962'>Ôúè $FAN</span>";  elif [ "1500" -lt $FAN ];then echo "<span color='#EBCB8B'>Ôúè $FAN</span>"; else echo "Ôúè $FAN"; fi
#label=Ôúè_
#interval=10
#signal=10
#markup=pango



#[xautolockk]
#command=less ~/.dot/var/xautolock
#interval=once
#color=EBCB8B
#signal=10

#[government]
#color=f5af19
#command=governor-list
#interval=once
#signal=10

#[email]
#command=~/.config/i3/blocklets/email/email
##color=#fabd2f
#label=ÔõÆ_
#instance=config
##min_width=messages: 99
#interval=once
#signal=10



#[ECHO]
#command=echo ""
#interval=once

#[weather]
#command= curl 'wttr.in/Paris?format=1'
#command=curl 'wttr.in/issy?format=%c+%t+%m+%h+%p+%w\n'
##command= curl -Ss 'https://wttr.in/paris?0&T&Q' | cut -c 16- | head -2  | tr '\n' ' ' | cut -d'C' -f1 | sed -n '1p'
#command= curl -Ss 'https://wttr.in/paris?0&T&Q' | cut -c 16- | head -2  | tr '\n' ' ' | xargs
##command=curl -Ss 'https://wttr.in/paris?0&T&Q' | cut -c 16- | head -2 | xargs echo | awk '{print "" $1 " " $2 " " $3 "" }'
#label=ÔÉÇ_
##label=ÔúÆ
#interval=once
#signal=10

#[ECHO]
#command=echo ""
#interval=once



 #Fancy text with multiple colors and shapes
#[funky]
#full_text=<span foreground="green" size="x-large">-</span> <i><span color="#EE37B8">-</span></i>
#markup=pango

